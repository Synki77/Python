import smtplib
import requests
import schedule
import time

from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from datetime import datetime

SMTP_SERVER = 'smtp.gmail.com'
SMTP_PORT = 587
EMAIL_ADDRESS = 'MYEMAIL@gmail.com'
EMAIL_PASSWORD = 'MYPASSWORD'
RECIPIENT_EMAIL = 'RECIPIENT_EMAIL@example.com'  # Add your recipient email address

def get_weather():
    url = "http://api.openweathermap.org/data/2.5/weather?q=Sherwood,US&appid=0123456789&units=metric"
    response = requests.get(url)
    data = response.json()
    if response.status_code == 200:
        weather_desc = data['weather'][0]['description']
        temp = data['main']['temp']
        weather_report = f"Weather in Sherwood: {weather_desc}, Temperature: {temp}Â°C"
        return weather_report
    else:
        return "Failed to get weather data"

def get_news():
    url = "https://newsapi.org/v2/top-headlines?category=science&apiKey=0123456789"
    response = requests.get(url)
    data = response.json()
    if response.status_code == 200:
        articles = data['articles'][:5]  # Get top 5 articles
        news_report = "Top Science and Technology News:\n"
        for article in articles:
            news_report += f"- {article['title']} ({article['source']['name']})\n"
        return news_report
    else:
        return "Failed to get news data"

def send_email():
    weather_report = get_weather()
    news_report = get_news()

    # Create message container
    msg = MIMEMultipart()
    msg['From'] = EMAIL_ADDRESS
    msg['To'] = RECIPIENT_EMAIL
    msg['Subject'] = 'Daily Weather and Science/Technology News Report'

    # Create the body of the message
    body = f"Good Morning!\n\nHere is your daily report:\n\n{weather_report}\n\n{news_report}\n\nDate: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
    msg.attach(MIMEText(body, 'plain'))

    # Send the email via SMTP server
    try:
        with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
            server.starttls()  # Secure the connection
            server.login(EMAIL_ADDRESS, EMAIL_PASSWORD)
            server.sendmail(EMAIL_ADDRESS, RECIPIENT_EMAIL, msg.as_string())
            print('Email sent successfully')
    except Exception as e:
        print(f'Failed to send email: {e}')

# Schedule the email to be sent daily at a specific time
schedule.every().day.at("09:00").do(send_email)

# Keep the script running
while True:
    schedule.run_pending()
    time.sleep(1)
